Let S be a sequence of numbers. Design an algorithm that finds the longest non-decreasing subsequence of S.

Hint: One solution is to find another sequence S' of S and apply the LCS algorithm on S and S'. 

Solution:

# Initialize some variables
n = len(s)
L = []
for i in range(n):
    L.append([])
L[0].append(S[0])

#Compute the subsequences
for i in range(1, n):
    for j in range(i):
        if S[i] > S[j] and (len(L[i]) < len(L[j]) + 1):
            L[i] = L[j]

    L[i].append(S[i])

#Find the max
M = L[0]
for x in L:
    if len(x) > len(M):
        M = x